name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      deploy_message_service:
        description: 'Deploy Message Service'
        type: boolean
        default: true
        required: false
      deploy_web_client:
        description: 'Deploy Web Client'
        type: boolean
        default: false
        required: false
      deploy_job_runner:
        description: 'Deploy Job Runner'
        type: boolean
        default: false
        required: false

jobs:
  checks:
    name: Run Checks
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
 
      - name: Build
        run: pnpm run build

      - name: Check Types
        run: pnpm run check-types

      - name: Test
        run: pnpm run test

  deploy:
    name: Deploy Apps
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - name: Deploy Message Service
        run: |
          # Initialize empty APP_IDS array
          APP_IDS=""

          if [ "${{ github.event_name == 'push' || inputs.deploy_message_service }}" = "true" ]; then
            echo "Deploying Message Service"
            APP_IDS="${APP_IDS}${{ secrets.MESSAGE_SERVICE_APP_ID }},"
          fi
          if [ "${{ github.event_name == 'push' || inputs.deploy_web_client }}" = "true" ]; then
            echo "Deploying Web Client"
            APP_IDS="${APP_IDS}${{ secrets.WEB_CLIENT_APP_ID }},"
          fi
          if [ "${{ github.event_name == 'push' || inputs.deploy_job_runner }}" = "true" ]; then
            echo "Deploying Job Runner"
            APP_IDS="${APP_IDS}${{ secrets.JOB_RUNNER_APP_ID }},"
          fi

          # Remove trailing comma if it exists
          APP_IDS=${APP_IDS%,}

          echo "Number of apps to deploy: $(echo $APP_IDS | tr -cd ',' | wc -c)"

          export FULL_URL="https://coolify.pacon.dev/api/v1/deploy?uuid=$APP_IDS"
          curl \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}" \
            "$FULL_URL"
